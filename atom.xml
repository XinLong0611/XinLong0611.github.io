<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>望星Along-blog</title>
  
  <subtitle>一个学习分享博客。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wangxingalong.club/"/>
  <updated>2019-12-09T14:40:38.703Z</updated>
  <id>https://wangxingalong.club/</id>
  
  <author>
    <name>望星Along</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>计算机网络复习笔记(一)——第一章 概述</title>
    <link href="https://wangxingalong.club/2019/12/08/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%BF%B0/"/>
    <id>https://wangxingalong.club/2019/12/08/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E6%A6%82%E8%BF%B0/</id>
    <published>2019-12-08T12:44:32.000Z</published>
    <updated>2019-12-09T14:40:38.703Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><p>测试用，可以随便听听。<br><audio src="http://link.hhtjim.com/163/464863017.mp3" style="width: 100%; max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" loop="loop" preload="meta">你的浏览器不支持这个标签。</audio></p>        <div id="aplayer-pxqQLSqJ" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-pxqQLSqJ"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Butter-Fly (MIX)",              author: "和田光司",              url: "http://link.hhtjim.com/163/29600327.mp3",              pic: "https://tvax3.sinaimg.cn/large/006TsOC4ly1g9g6dw1qe1j30sg0sgjtn.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.js"></script><script src="https://cdn.jsdelivr.net/npm/meting@1.1.0/dist/Meting.min.js"></script><div class="aplayer" data-id="3099548864" data-server="netease" data-type="playlist" data-mode="random" data-autoplay="true"></div><hr><h2 id="Geam-Start！"><a href="#Geam-Start！" class="headerlink" title="Geam Start！"></a>Geam Start！</h2><hr><h3 id="计算机的定义"><a href="#计算机的定义" class="headerlink" title="计算机的定义"></a>计算机的定义</h3><p>现在是一个以<strong>网络为核心</strong>的信息时代。<br>三化：<strong>数字化、网络化、信息化。</strong><br>三网：<br>  <strong>电信网络</strong>：提供电话、电报以及传真等服务。<br>  <strong>有线电视网络</strong>：向用户传送各种电视节目。<br>  <strong>计算机网络</strong>：使用户能在计算机之间传送数据文件。<br>计算机网络的精确定义并未统一。较好的定义：</p><blockquote><p>计算机网络主要是由一些通用的、可编程的硬件互连而成的，而这些硬件并非专门用来实现某一特定目的（例如，传送数据或视频信号）。这些可编程的硬件能够用来传送多种不同类型的数据，并能支持广泛的和日益增长的应用。</p></blockquote><p><strong>“可编程的硬件”表明这种硬件一定包含有中央处理机 (CPU)。</strong><br>Internet 的中文译名并不统一。现有的 Internet 译名有两种：</p><blockquote><p><strong>因特网</strong>,这个译名是全国科学技术名词审定委员会推荐的，但却长期未得到推广；<br><strong>互联网</strong>,这是目前流行最广的、事实上的标准译名。现在我国的各种报刊杂志、政府文件以及电视节目中都毫无例外地使用这个译名。</p></blockquote><p>互联网是由数量极大的各种计算机网络互连起来而形成的网络。</p><p><strong>互联网具有两个重要基本特点：</strong></p><blockquote><p><strong>连通性</strong>：使上网用户之间都可以交换信息（数据，以及各种音频视频） ，好像这些用户的计算机都可以彼此直接连通一样。注意，互联网具有虚拟的特点，无法准确知道对方是谁，也无法知道对方的位置。<br><strong>共享</strong>：指资源共享。资源共享的含义是多方面的。可以是信息共享、软件共享，也可以是硬件共享。由于网络的存在，这些资源好像就在用户身边一样，方便使用。<br><img src="https://tvax2.sinaimg.cn/large/006TsOC4ly1g9pmexez7yj30hh08274p.jpg" alt="计算机网络1"></p></blockquote><hr><h3 id="互联网概述"><a href="#互联网概述" class="headerlink" title="互联网概述"></a>互联网概述</h3><hr><h4 id="网络的网络"><a href="#网络的网络" class="headerlink" title="网络的网络"></a>网络的网络</h4><p><strong>互联网(Internet)</strong>：特指Internet，起源于美国，现已发展成为世界上最大的、覆盖全球的计算机网络。<br><strong>计算机网络（简称网络）</strong>：由若干结点(node)和连接这些结点的链路(link)组成。<br><strong>互连网（internetwork或internet）</strong>：可以通过路由器把网络互连起来，这就构成了一个覆盖范围更大的计算机网络，称之为互连网。“网络的网络”(network of networks)。<br><img src="https://tva4.sinaimg.cn/large/006TsOC4ly1g9pnkc6ztvj30kt09xdhd.jpg" alt="计算机网络2"></p><hr><p>当使用一朵“云”来表示网络时，可能会有两种不同的情况：<br>1.云表示的网络已经包含了和网络相连的计算机。<br>2.云表示的网络里面就只剩下许多路由器和连接这些路由器的链路，把有关的计算机画在云的外面。<strong>习惯上，与网络相连的计算机常称为主机 (host)</strong>。</p><blockquote><p>网络把许多计算机连接在一起。<br>互连网则把许多网络通过路由器连接在一起。<br>与网络相连的计算机常称为主机。</p></blockquote><p><img src="https://tvax2.sinaimg.cn/large/006TsOC4ly1g9pnpjn5a5j30k407jwfl.jpg" alt="计算机网络3"></p><h4 id="互联网基础结构发展的三个阶段"><a href="#互联网基础结构发展的三个阶段" class="headerlink" title="互联网基础结构发展的三个阶段"></a>互联网基础结构发展的三个阶段</h4><p><strong>第一阶段</strong>：</p><blockquote><p>从单个网络 ARPANET 向互联网发展的过程。<br>1983 年， TCP/IP 协议成为 ARPANET 上的标准协议，使得所有使用 TCP/IP 协议的计算机都能利用互连网相互通信。<br>人们把 1983 年作为互联网的诞生时间。<br>1990年，ARPANET 正式宣布关闭。</p></blockquote><p>以小写字母 “i” 开始的<strong><em>internet（互连网）</em></strong> 是一个通用名词，它泛指由多个计算机网络互连而成的网络。<br>以大写字母 “I” 开始的的 <strong><em>Internet（互联网或因特网）</em></strong> 则是一个专用名词，它指当前全球最大的、开放的、由众多网络相互连接而成的特定计算机网络，它采用 TCP/IP 协议族作为通信的规则，且其前身是美国的 ARPANET。</p><hr><p><strong>第二阶段</strong>：</p><blockquote><p>建成了三级结构的互联网。<br>它是一个三级计算机网络，分为主干网、地区网和校园网（或企业网）。</p></blockquote><p><img src="https://tvax1.sinaimg.cn/large/006TsOC4ly1g9pny3e80xj30jp06xjs0.jpg" alt="计算机网络4"></p><hr><p><strong>第三阶段</strong>：</p><blockquote><p>逐渐形成了多层次 ISP 结构的互联网。<br>出现了互联网服务提供者 ISP (Internet Service Provider)。<br>任何机构和个人只要向某个 ISP 交纳规定的费用，就可从该 ISP 获取所需 IP 地址的使用权，并可通过该 ISP 接入到互联网。<br>根据提供服务的覆盖面积大小以及所拥有的 IP 地址数目的不同，ISP 也分成为不同层次的 ISP：<strong>主干 ISP、地区 ISP 和 本地 ISP</strong>。</p></blockquote><p><img src="https://tvax1.sinaimg.cn/large/006TsOC4ly1g9po2h1ijfj30ku0elgns.jpg" alt="计算机网络5"><br><img src="https://tvax2.sinaimg.cn/large/006TsOC4ly1g9po4walzhj30fe0apq3k.jpg" alt="计算机网络6"></p><hr><h4 id="互联网的标准化工作"><a href="#互联网的标准化工作" class="headerlink" title="互联网的标准化工作"></a>互联网的标准化工作</h4><p>所有互联网标准都以 RFC 的形式在互联网上发表。<br>成为互联网正式标准要经过三个阶段：</p><blockquote><p><strong>互联网草案 (Internet Draft)</strong>：有效期只有六个月。在这个阶段还不是 RFC 文档。<br><strong>建议标准 (Proposed Standard)</strong>：从这个阶段开始就成为 RFC 文档。<br><strong>互联网标准 (Internet Standard)</strong>：达到正式标准后，每个标准就分配到一个编号 STD xxxx。 一个标准可以和多个 RFC 文档关联。</p></blockquote><p>除了建议标准和互联网标准这两种 RFC 文档外，还有三种 RFC 文档，即历史的、实验的和提供信息的 RFC 文档。<br><img src="https://tvax1.sinaimg.cn/large/006TsOC4ly1g9poec3s0bj30js08oglv.jpg" alt="计算机网络7"></p><hr><h3 id="互联网的组成"><a href="#互联网的组成" class="headerlink" title="互联网的组成"></a>互联网的组成</h3><p>从互联网的工作方式上看，可以划分为两大块：</p><blockquote><p><strong>边缘部分</strong>：由所有连接在互联网上的主机组成。这部分是用户直接使用的，用来进行通信（传送数据、音频或视频）和资源共享。<br><strong>核心部分</strong>：由大量网络和连接这些网络的路由器组成。这部分是为边缘部分提供服务的（提供连通性和交换）。</p></blockquote><h4 id="互联网的边缘部分"><a href="#互联网的边缘部分" class="headerlink" title="互联网的边缘部分"></a>互联网的边缘部分</h4><p>处在互联网边缘的部分就是连接在互联网上的所有的主机。这些主机又称为 <strong>端系统 (end system)</strong>。<br>端系统之间的通信方式通常可划分为两大类：</p><blockquote><p><strong>客户-服务器方式（C/S 方式）</strong>：即 Client/Server 方式，简称为 C/S 方式。<br>  客户-服务器方式所描述的是进程之间服务和被服务的关系。<br>  客户是 <strong>服务的请求方</strong>，服务器是 <strong>服务的提供方</strong>。<br>  客户与服务器的通信关系建立后，<strong>通信可以是双向的</strong>，客户和服务器都可发送和接收数据。<br><strong>对等方式（P2P 方式）</strong>：即 PeertoPeer 方式 ，简称为 P2P 方式。<br>  对等连接 (peer-to-peer，简写为 P2P) 是指两个主机在通信时并不区分哪一个是服务请求方还是服务提供方。<br>  只要两个主机都运行了对等连接软件 (P2P 软件) ，它们就可以进行平等的、对等连接通信。<br>  双方都可以下载对方已经存储在硬盘中的共享文档。<br>  对等连接工作方式可支持大量对等用户（如上百万个）同时工作。</p></blockquote><hr><h4 id="互联网的核心部分"><a href="#互联网的核心部分" class="headerlink" title="互联网的核心部分"></a>互联网的核心部分</h4><p>网络核心部分是互联网中最复杂的部分。<br>在网络核心部分起特殊作用的是 <strong>路由器 (router)</strong>。</p><blockquote><p>路由器是实现分组交换 (packet switching) 的关键构件，其任务是转发收到的分组，这是网络核心部分最重要的功能。</p></blockquote><hr><p>每一部电话都直接连接到交换机上，而交换机使用交换的方法，让电话用户彼此之间可以很方便地通信。<br>所采用的交换方式就是电路交换 (circuit switching)。<br>在这里，“交换”(switching)的含义就是转接 ———— 把一条电话线转接到另一条电话线，使它们连通起来。<br>从通信资源的分配角度来看，“交换”就是按照某种方式动态地分配传输线路的资源。<br><strong>电路交换的特点</strong></p><blockquote><p>电路交换必定是面向连接的。<br>电路交换分为三个阶段：<br>  <strong>建立连接</strong>：建立一条专用的物理通路，以保证双方通话时所需的通信资源在通信时不会被其他用户占用<br>  <strong>通信</strong>：主叫和被叫双方就能互相通电话<br>  <strong>释放连接</strong>：释放刚才使用的这条专用的物理通路（释放刚才占用的所有通信资源）</p></blockquote><blockquote><p>计算机数据具有突发性。<br>这导致在传送计算机数据时，通信线路的利用率很低（用来传送数据的时间往往不到10%甚至1% ）。</p></blockquote><hr><p><strong>分组交换的特点</strong></p><blockquote><p>分组交换则采用存储转发技术。<br>在发送端，先把较长的报文划分成较短的、固定长度的数据段。<br>每一个数据段前面添加上首部构成分组(packet)。</p></blockquote><p><img src="https://tva4.sinaimg.cn/large/006TsOC4ly1g9pp7qxj46j30i8082aa4.jpg" alt="计算机网络8"><br>分组交换网以“分组”作为数据传输单元。依次把各分组发送到接收端。</p><blockquote><p>每一个分组的首部都含有地址（诸如目的地址和源地址）等控制信息。<br>分组交换网中的结点交换机根据收到的分组首部中的地址信息，把分组转发到下一个结点交换机。<br>每个分组在互联网中独立地选择传输路径。<br>用这样的存储转发方式，最后分组就能到达最终目的地。<br>接收端收到分组后剥去首部还原成报文。</p></blockquote><blockquote><p>互联网的核心部分是由许多网络和把它们互连起来的路由器组成，而主机处在互联网的边缘部分。<br>互联网核心部分中的路由器之间一般都用高速链路相连接，而在网络边缘的主机接入到核心部分则通常以相对较低速率的链路相连接。<br>主机的用途是为用户进行信息处理的，并且可以和其他主机通过网络交换信息。路由器的用途则是用来转发分组的，即进行分组交换的。</p></blockquote><hr><p><strong>路由器</strong><br>在路由器中的输入和输出端口之间没有直接连线。<br>路由器处理分组的过程是：<br>  把收到的分组先放入缓存（暂时存储）<br>  查找转发表，找出到某个目的地址应从哪个端口转发<br>  把分组送到适当的端口转发出去<br>分组交换的优点</p><table><thead><tr><th align="left">优点</th><th align="right">所采用的手段</th></tr></thead><tbody><tr><td align="left">高效</td><td align="right">在分组传输的过程中动态分配传输带宽，对通信链路是逐段占用</td></tr><tr><td align="left">灵活</td><td align="right">为每一个分组独立地选择最合适的转发路由</td></tr><tr><td align="left">迅速</td><td align="right">以分组作为传送单位，可以不先建立连接就能向其他主机发送分组</td></tr><tr><td align="left">可靠</td><td align="right">保证可靠性的网络协议；分布式多路由的分组交换网，使网络有很好的生存性</td></tr></tbody></table><blockquote><p>分组在各结点存储转发时需要排队，这就会造成一定的时延。<br>分组必须携带的首部（里面有必不可少的控制信息）也造成了一定的开销。</p></blockquote><blockquote><p>在 20 世纪 40 年代，电报通信也采用了基于存储转发原理的 <strong>报文交换 (message switching)</strong>。<br>报文交换的时延较长，从几分钟到几小时不等。现在报文交换已经很少有人使用了。</p></blockquote><p><img src="https://tva3.sinaimg.cn/large/006TsOC4ly1g9pplc208oj30km0ezdhn.jpg" alt="计算机网络9"></p><blockquote><p>若要连续传送大量的数据，且其传送时间远大于连接建立时间，则 <strong>电路交换的传输速率较快</strong>。<br><strong>报文交换</strong> 和 <strong>分组交换</strong> 不需要预先分配传输带宽，在传送突发数据时可提高整个网络的信道利用率。<br>由于一个分组的长度往往远小于整个报文的长度，因此 <strong>分组交换比报文交换的时延小，同时也具有更好的灵活性</strong>。</p></blockquote><p><img src="https://tvax3.sinaimg.cn/large/006TsOC4ly1g9qpahjnzrj30fn097dgs.jpg" alt="计算机网络10"></p><hr><h3 id="计算机网络的类别"><a href="#计算机网络的类别" class="headerlink" title="计算机网络的类别"></a>计算机网络的类别</h3><ol><li>按照网络的作用范围进行分类<ul><li><strong>广域网WAN(Wide Area Network)</strong>：作用范围通常为几十到几千公里。</li><li><strong>城域网 MAN (Metropolitan Area Network)</strong>：作用距离约为  5 ~ 50 公里。</li><li><strong>局域网 LAN (Local Area Network)</strong>：局限在较小的范围（如 1 公里左右）。</li><li><strong>个人区域网 PAN (Personal Area Network)</strong>：范围很小，大约在 10 米左右。</li></ul></li></ol><blockquote><p>若中央处理机之间的距离非常近（如仅1米的数量级甚至更小些），则一般就称之为多处理机系统，而不称它为计算机网络。</p></blockquote><ol start="2"><li>按照网络的使用者进行分类<ul><li><strong>公用网 (public network)</strong></li><li><strong>专用网 (private network)</strong></li></ul></li><li>用来把用户接入到互联网的网络<ul><li><strong>接入网 AN (Access Network)</strong>，又称为本地接入网或居民接入网。<br>接入网本身既不属于互联网的核心部分，也不属于互联网的边缘部分。<br>接入网是从某个用户端系统到互联网中的第一个路由器（也称为边缘路由器）之间的一种网络。<blockquote><p>从覆盖的范围看，很多接入网还是属于局域网。<br>从作用上看，接入网只是起到让用户能够与互联网连接的“桥梁”作用。<br>从实现技术上看，接入网即有利用现有网络（电话网、闭路电视网）实现，也可专门建设实现</p></blockquote></li></ul></li></ol><hr><h3 id="计算机网络的性能指标"><a href="#计算机网络的性能指标" class="headerlink" title="计算机网络的性能指标"></a>计算机网络的性能指标</h3><p>计算机网络的性能一般是指它的几个重要的性能指标，主要包括：</p><ul><li>速率</li><li>带宽</li><li>吞吐率</li><li>时延</li><li>时延带宽积</li><li>往返时间 RTT</li><li>利用率</li></ul><hr><p>一些非性能特征也很重要。它们与前面介绍的性能指标有很大的关系。主要包括：</p><ul><li>费用</li><li>质量</li><li>标准化</li><li>可靠性</li><li>可扩展性和可升级性</li><li>易于管理和维护</li></ul><hr><h4 id="速率"><a href="#速率" class="headerlink" title="速率"></a>速率</h4><p>比特（bit）是计算机中数据量的单位，也是信息论中使用的信息量的单位。<br>速率是计算机网络中最重要的一个性能指标，指的是<strong>数据的传送速率</strong>，它也称为<strong>数据率 (data rate)或比特率 (bit rate)</strong>。<br><strong>速率往往是指额定速率或标称速率，非实际运行速率</strong>。</p><hr><h4 id="带宽"><a href="#带宽" class="headerlink" title="带宽"></a>带宽</h4><p>“带宽”(bandwidth) 本来是指信号具有的<strong>频带宽度</strong>，其单位是赫（或千赫、兆赫、吉赫等）。<br>在计算机网络中，带宽用来表示网络中某通道传送数据的能力。<br>表示在单位时间内网络中的某信道所能通过的 <strong>“最高数据率”</strong>。单位是 bit/s ，即 “比特每秒”。<br>在“带宽”的上述两种表述中，前者为<strong>频域</strong>称谓，而后者为<strong>时域</strong>称谓，其本质是相同的。也就是说，一条通信链路的“带宽”越宽，其所能传输的“最高数据率”也越高。</p><hr><h4 id="吞吐量"><a href="#吞吐量" class="headerlink" title="吞吐量"></a>吞吐量</h4><p>吞吐量 (throughput) 表示在单位时间内通过某个网络（或信道、接口）的数据量。<br><strong>吞吐量受网络的带宽或网络的额定速率的限制</strong>。  </p><hr><h4 id="时延"><a href="#时延" class="headerlink" title="时延"></a>时延</h4><p>时延 (delay 或 latency) 是指数据（一个报文或分组，甚至比特）从网络（或链路）的一端传送到另一端所需的时间。<br>有时也称为<strong>延迟</strong>或<strong>迟延</strong>。<br>网络中的时延由以下几个不同的部分组成：</p><ul><li><strong>发送时延</strong></li><li><strong>传播时延</strong></li><li><strong>处理时延</strong></li><li><strong>排队时延</strong></li></ul><p><img src="https://tva2.sinaimg.cn/large/006TsOC4ly1g9qpsyuv99j30jb0aj0u2.jpg" alt="计算机网络11"></p><hr><h5 id="发送时延"><a href="#发送时延" class="headerlink" title="发送时延"></a>发送时延</h5><blockquote><p>也称为传输时延<br>发送数据时，数据帧从结点进入到传输媒体所需要的时间</p></blockquote><p><img src="https://tvax2.sinaimg.cn/large/006TsOC4ly1g9qpvlp34sj30bi02it8p.jpg" alt="计算机网络12"></p><hr><h5 id="传播时延"><a href="#传播时延" class="headerlink" title="传播时延"></a>传播时延</h5><blockquote><p>电磁波在信道中需要传播一定的距离而花费的时间<br>发送时延与传播时延有本质上的不同<br>信号<strong>发送速率</strong>和信号<strong>在信道上的传播速率</strong>是完全不同的概念</p></blockquote><p><img src="https://tvax4.sinaimg.cn/large/006TsOC4ly1g9qpyu7jfwj30g402faa4.jpg" alt="计算机网络13"></p><hr><h5 id="处理时延"><a href="#处理时延" class="headerlink" title="处理时延"></a>处理时延</h5><blockquote><p>主机或路由器在收到分组时，为处理分组（例如分析首部、提取数据、差错检验或查找路由）所花费的时间</p></blockquote><hr><h5 id="排队时延"><a href="#排队时延" class="headerlink" title="排队时延"></a>排队时延</h5><blockquote><p>分组在路由器输入输出队列中排队等待处理所经历的时延<br><strong>排队时延的长短往往取决于网络中当时的通信量</strong></p></blockquote><hr><p>总时延 = 发送时延 + 传播时延 + 处理时延 + 排队时延<br><strong>思考</strong><br>“带宽”的变化将会改变哪种时延？</p><blockquote><p>对于高速网络链路，我们提高的仅仅是数据的发送速率而不是比特在链路上的传播速率<br>提高链路带宽减小了数据的发送时延</p></blockquote><p>上网时，感觉网络时快时慢，主要是哪种时延引起的？</p><blockquote><p>排队时延</p></blockquote><p>电路交换、报文交换和分组交换中都存在哪几种时延？</p><p>每一种时延在各交换方式中是否相同？</p><hr><h5 id="时延带宽积"><a href="#时延带宽积" class="headerlink" title="时延带宽积"></a>时延带宽积</h5><p>链路的时延带宽积又称为<strong>以比特为单位的链路长度</strong>。</p><blockquote><p>时延带宽积 = 传播时延 X 带宽</p></blockquote><p><strong>只有在代表链路的管道都充满比特时，链路才得到了充分利用</strong>。</p><hr><h5 id="往返时间RTT"><a href="#往返时间RTT" class="headerlink" title="往返时间RTT"></a>往返时间RTT</h5><p>往返时间表示从发送方发送数据开始，到发送方收到来自接收方的确认，总共经历的时间。<br>在互联网中，往返时间还包括各中间结点的处理时延、排队时延以及转发数据时的发送时延。<br>当使用卫星通信时，往返时间 RTT 相对较长，是很重要的一个性能指标。</p><hr><h5 id="利用率"><a href="#利用率" class="headerlink" title="利用率"></a>利用率</h5><p>分为<strong>信道利用率</strong>和<strong>网络利用率</strong>。</p><blockquote><p>信道利用率指出某信道有百分之几的时间是被利用的（有数据通过）。完全空闲的信道的利用率是零<br>网络利用率则是全网络的信道利用率的加权平均值</p></blockquote><p>信道利用率并非越高越好。<strong>当某信道的利用率增大时，该信道引起的时延也就迅速增加</strong>。<br>若令 D0 表示网络空闲时的时延，D 表示网络当前的时延，则在适当的假定条件下，可以用下面的简单公式表示 D 和 D0之间的关系：<br><img src="https://tvax3.sinaimg.cn/large/006TsOC4ly1g9qtpi3t24j303q023mwx.jpg" alt="计算机网络14"><br><strong>其中：U 是网络的利用率，数值在 0 到 1 之间</strong>。</p><hr><h3 id="计算机网络的体系结构"><a href="#计算机网络的体系结构" class="headerlink" title="计算机网络的体系结构"></a>计算机网络的体系结构</h3><hr><h4 id="计算机网络体系结构的形成"><a href="#计算机网络体系结构的形成" class="headerlink" title="计算机网络体系结构的形成"></a>计算机网络体系结构的形成</h4><p>相互通信的两个计算机系统必须<strong>高度协调工作</strong>才行，而这种“协调”是相当复杂的。<br><strong>“分而治之”</strong>可将庞大而复杂的问题，转化为若干较小的局部问题，而这些较小的局部问题就比较易于研究和处理。</p><blockquote><p>1974 年，美国的 IBM 公司宣布了<strong>系统网络体系结构SNA</strong>(System Network Architecture)。这个著名的网络标准就是按照分层的方法制定的<br>不久后，其他一些公司也相继推出自己公司的具有不同名称的体系结构<br>DEC（Digital Equipment Corporation）的数字网络体系结构DNA<br><strong>由于网络体系结构的不同，不同公司的设备很难互相连通</strong></p></blockquote><p>开放系统互连基本参考模型 OSI/RM (Open Systems Interconnection Reference Model)，简称为 OSI。</p><blockquote><p>只要遵循 OSI 标准，一个系统就可以和位于世界上任何地方的、也遵循这同一标准的其他任何系统进行通信</p></blockquote><blockquote><p>法律上的 (de jure) 国际标准 OSI 并没有得到市场的认可<br>非国际标准 TCP/IP 却获得了最广泛的应用。TCP/IP 常被称为<strong>事实上的 (de facto) 国际标准</strong></p></blockquote><hr><h4 id="协议与划分层次"><a href="#协议与划分层次" class="headerlink" title="协议与划分层次"></a>协议与划分层次</h4><p>计算机网络中的数据交换<strong>必须遵守事先约定好的规则</strong>。<br>这些规则明确规定了所交换的数据的格式以及有关的同步问题（同步含有时序的意思）。<br><strong>网络协议 (network protocol)</strong>，简称为<strong>协议</strong>，是为进行网络中的数据交换而建立的规则、标准或约定。<br>网络协议的三个组成要素：<br><strong>语法</strong>：数据与控制信息的结构或格式 。<br><strong>语义</strong>：需要发出何种控制信息，完成何种动作以及做出何种响应。<br><strong>同步</strong>：事件实现顺序的详细说明。</p><hr><p>协议的两种形式：<br>一种是使用便于人来阅读和理解的<strong>文字描述</strong>。<br>另一种是使用让计算机能够理解的<strong>程序代码</strong>。<br>这两种不同形式的协议都必须能够对网络上信息交换过程做出精确的解释。</p><hr><p>分层的好处与缺点：</p><table><thead><tr><th>好处</th><th>缺点</th></tr></thead><tbody><tr><td>各层之间是独立的；灵活性好；结构上可分割开；易于实现和维护；能促进标准化工作</td><td>降低效率；有些功能会在不同的层次中重复出现，因而产生了额外开销</td></tr></tbody></table><blockquote><p>层数太少，就会使每一层的协议太复杂<br>层数太多，又会在描述和综合各层功能的系统工程任务时遇到较多的困难</p></blockquote><hr><p>各层完成的主要功能：<br><strong>差错控制</strong>：使相应层次对等方的通信更加可靠。<br><strong>流量控制</strong>：发送端的发送速率必须使接收端来得及接收，不要太快。<br><strong>分段和重装</strong>：发送端将要发送的数据块划分为更小的单位，在接收端将其还原。<br><strong>复用和分用</strong>：发送端几个高层会话复用一条低层的连接，在接收端再进行分用。<br><strong>连接建立和释放</strong>：交换数据前先建立一条逻辑连接，数据传送结束后释放连接。</p><hr><p><strong>计算机网络的体系结构 (architecture)</strong> 是计算机网络的各层及其协议的集合。<br>体系结构就是这个计算机网络及其部件<strong>所应完成的功能的精确定义</strong>。<br><strong>实现 (implementation)</strong> 是遵循这种体系结构的前提下用何种硬件或软件完成这些功能的问题。<br><strong>体系结构是抽象的，而实现则是具体的，是真正在运行的计算机硬件和软件</strong>。   </p><hr><h4 id="具有五层协议的体系结构"><a href="#具有五层协议的体系结构" class="headerlink" title="具有五层协议的体系结构"></a>具有五层协议的体系结构</h4><p><strong>OSI</strong> 的<strong>七层协议体系结构</strong>的概念清楚，理论也较完整，但它既复杂又不实用。<br><strong>TCP/IP</strong> 是<strong>四层体系结构</strong>：<strong>应用层、运输层、网际层和网络接口层</strong>。但最下面的网络接口层并没有具体内容。<br>因此往往采取折中的办法，即<strong>综合 OSI 和 TCP/IP</strong> 的优点，采用一种只有<strong>五层协议的体系结构</strong> 。<br><img src="https://tvax2.sinaimg.cn/large/006TsOC4ly1g9qu7gpwu8j30i30army3.jpg" alt="计算机网络15"></p><hr><p>主机 1 向主机 2 发送数据：<br>应用进程数据先传送到应用层；加上应用层首部，成为应用层 PDU</p><blockquote><p>PDU (Protocol Data Unit)：协议数据单元。OSI 参考模型把对等层次之间传送的数据单位称为该层的协议数据单元 PDU。</p></blockquote><p>应用层 PDU 再传送到运输层；加上运输层首部，成为运输层报文<br>运输层报文再传送到网络层；加上网络层首部，成为 IP 数据报（或分组）<br>IP 数据报再传送到数据链路层；加上链路层首部和尾部，成为数据链路层帧<br>数据链路层帧再传送到物理层；最下面的物理层把比特流传送到物理媒体<br>电信号（或光信号）在物理媒体中传播，从发送端物理层传送到接收端物理层<br>物理层接收到比特流，上交给数据链路层<br>数据链路层剥去帧首部和帧尾部；取出数据部分，上交给网络层<br>网络层剥去首部，取出数据部分；上交给运输层<br>运输层剥去首部，取出数据部分；上交给应用层<br>应用层剥去首部，取出应用程序数据；上交给应用进程<br><img src="https://tva3.sinaimg.cn/large/006TsOC4ly1g9qucvziqmj30ie08wmxs.jpg" alt="计算机网络16"><br>主机2接收数据时自小向上剥去相应的首部、尾部。</p><hr><p>任何两个同样的层次把数据（即数据单元加上控制信息）通过水平虚线直接传递给对方。这就是所谓的<strong>“对等层”(peer layers)</strong>之间的通信。<br><strong>各层协议</strong>实际上就是在各个对等层之间传递数据时的各项规定。</p><hr><h4 id="实体、协议、服务和服务访问点"><a href="#实体、协议、服务和服务访问点" class="headerlink" title="实体、协议、服务和服务访问点"></a>实体、协议、服务和服务访问点</h4><p><strong>实体 (entity)</strong> 表示任何可发送或接收信息的硬件或软件进程。<br><strong>协议</strong>是控制两个对等实体进行通信的规则的集合。<br>在协议的控制下，两个对等实体间的通信使得<strong>本层能够向上一层提供服务</strong>。<br>要实现本层协议，还需要<strong>使用下层所提供的服务</strong>。</p><hr><p>协议的实现保证了能够向上一层提供服务。<br>本层的服务用户只能看见服务而无法看见下面的协议。即<strong>下面的协议对上面的服务用户是透明的</strong>。<br>协议是<strong>“水平的”</strong>，即协议是控制对等实体之间通信的规则。<br>服务是<strong>“垂直的”</strong>，即服务是由下层向上层通过层间接口提供的。<br>上层使用<strong>服务原语</strong>获得下层所提供的服务。</p><hr><p>同一系统相邻两层的实体进行交互的地方，称为<strong>服务访问点 SAP (Service Access Point)</strong>。<br>服务访问点SAP是一个抽象的概念，它实际上就是一个逻辑接口。<br>OSI把层与层之间交换的数据的单位称为<strong>服务数据单元 SDU (Service Data Unit)</strong>。<br>SDU 可以与 PDU 不一样，例如，可以是多个 SDU 合成为一个 PDU，也可以是一个 SDU 划分为几个 PDU。<br><img src="https://tva4.sinaimg.cn/large/006TsOC4ly1g9quk99083j30ik09pwf0.jpg" alt="计算机网络17"></p><hr><p>协议必须把<strong>所有不利的条件</strong>事先都估计到，而不能假定一切都是正常的和非常理想的。<br>看一个计算机网络协议是否正确，不能光看在正常情况下是否正确，还必须非常仔细地检查这个协议<strong>能否应付各种异常情况</strong>。<br><img src="https://tva3.sinaimg.cn/large/006TsOC4ly1g9qum2gxtej30h50asq3t.jpg" alt="计算机网络18"></p><hr><p><img src="https://tvax3.sinaimg.cn/large/006TsOC4ly1g9qumtq6q9j30i50cmmyb.jpg" alt="计算机网络19"></p><hr><h2 id="Game-Clearance"><a href="#Game-Clearance" class="headerlink" title="Game Clearance!!!"></a>Game Clearance!!!</h2>]]></content>
    
    <summary type="html">
    
      计算机网络（第七版） 谢希仁著,内容参照老师提供的PPT
    
    </summary>
    
    
      <category term="计算机专业课" scheme="https://wangxingalong.club/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    
      <category term="计算机网络" scheme="https://wangxingalong.club/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
      <category term="复习笔记" scheme="https://wangxingalong.club/tags/%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>C++中int转string、char和int互转</title>
    <link href="https://wangxingalong.club/2019/12/07/C++%E4%B8%ADint%E8%BD%ACstring%E3%80%81char%E5%92%8Cint%E4%BA%92%E8%BD%AC/"/>
    <id>https://wangxingalong.club/2019/12/07/C++%E4%B8%ADint%E8%BD%ACstring%E3%80%81char%E5%92%8Cint%E4%BA%92%E8%BD%AC/</id>
    <published>2019-12-07T14:03:53.000Z</published>
    <updated>2019-12-08T08:04:57.975Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><p>测试用，可以随便听听。<br><audio src="http://link.hhtjim.com/163/464863017.mp3" style="width: 100%; max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" loop="loop" preload="meta">你的浏览器不支持这个标签。</audio></p>        <div id="aplayer-XFyiyZHL" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-XFyiyZHL"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Butter-Fly (MIX)",              author: "和田光司",              url: "http://link.hhtjim.com/163/29600327.mp3",              pic: "https://tvax3.sinaimg.cn/large/006TsOC4ly1g9g6dw1qe1j30sg0sgjtn.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.js"></script><script src="https://cdn.jsdelivr.net/npm/meting@1.1.0/dist/Meting.min.js"></script><div class="aplayer" data-id="3099548864" data-server="netease" data-type="playlist" data-mode="random" data-autoplay="true"></div><hr><h2 id="Geam-Start！"><a href="#Geam-Start！" class="headerlink" title="Geam Start！"></a>Geam Start！</h2><hr><h3 id="int转string"><a href="#int转string" class="headerlink" title="int转string"></a>int转string</h3><p>在Java中，可以直接用字符串加上int类型的数，但是在C++中这种做法就行不通了，每次都把C++和Java搞混，写成下面的格式。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">string</span> str = <span class="string">"STR"</span>;</span><br><span class="line">    str += a;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：<br><img src="https://tvax1.sinaimg.cn/large/006TsOC4ly1g9oizxn6ixj30ip0ef3yl.jpg" alt="C++1"></p><hr><p>int转string的方法有很多，我就记录一种可行的方法。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">string</span> str = <span class="string">"STR"</span>;</span><br><span class="line">    <span class="built_in">stringstream</span> ss;</span><br><span class="line">    ss &lt;&lt; a;</span><br><span class="line">    str += ss.str();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：<br><img src="https://tvax3.sinaimg.cn/large/006TsOC4ly1g9ojac7a2sj30ip0ef3yl.jpg" alt="C++2"><br>不同的类型转换方法会根据C++编辑器的版本不同而不同，还要考虑到版本兼容的问题。</p><hr><h3 id="int和char互转"><a href="#int和char互转" class="headerlink" title="int和char互转"></a>int和char互转</h3><p>这个就很简单了，和Java一样，不过要注意，char转为int时，获得的值是该字符的ASCII码，同样的，int转char时，不能超过ASCII码表的最大值，代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch1 = <span class="string">'1'</span>;</span><br><span class="line">    <span class="keyword">int</span> a1 = <span class="keyword">int</span>(ch1);</span><br><span class="line">    <span class="keyword">int</span> a2 = <span class="number">49</span>;</span><br><span class="line">    <span class="keyword">char</span> ch2 = <span class="keyword">char</span>(a2);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; a1 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ch2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：<br><img src="https://tva3.sinaimg.cn/large/006TsOC4ly1g9ojku9k3vj30ip0efq31.jpg" alt="C++3"></p><hr><h2 id="Game-Clearance"><a href="#Game-Clearance" class="headerlink" title="Game Clearance!!!"></a>Game Clearance!!!</h2>]]></content>
    
    <summary type="html">
    
      每次用到数据类型转换的时候总是要上网查看别人的，这次就小总结一下。
    
    </summary>
    
    
      <category term="编程语言" scheme="https://wangxingalong.club/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="C++" scheme="https://wangxingalong.club/tags/C/"/>
    
      <category term="类型转换" scheme="https://wangxingalong.club/tags/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>操作系统——进程调度算法模拟</title>
    <link href="https://wangxingalong.club/2019/12/07/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E2%80%94%E2%80%94%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95%E6%A8%A1%E6%8B%9F/"/>
    <id>https://wangxingalong.club/2019/12/07/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E2%80%94%E2%80%94%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95%E6%A8%A1%E6%8B%9F/</id>
    <published>2019-12-07T14:03:04.000Z</published>
    <updated>2019-12-08T12:51:27.824Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><p>测试用，可以随便听听。<br><audio src="http://link.hhtjim.com/163/464863017.mp3" style="width: 100%; max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" loop="loop" preload="meta">你的浏览器不支持这个标签。</audio></p>        <div id="aplayer-ESxsWgQl" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-ESxsWgQl"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Butter-Fly (MIX)",              author: "和田光司",              url: "http://link.hhtjim.com/163/29600327.mp3",              pic: "https://tvax3.sinaimg.cn/large/006TsOC4ly1g9g6dw1qe1j30sg0sgjtn.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.js"></script><script src="https://cdn.jsdelivr.net/npm/meting@1.1.0/dist/Meting.min.js"></script><div class="aplayer" data-id="3099548864" data-server="netease" data-type="playlist" data-mode="random" data-autoplay="true"></div><hr><h2 id="Geam-Start！"><a href="#Geam-Start！" class="headerlink" title="Geam Start！"></a>Geam Start！</h2><hr><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>设计一个按优先数调度算法实现处理器调度的程序。<br>[提示]：<br>(1) 假定系统有五个进程，每一个进程用一个进程控制块PCB来代表，进程控制块的格式为：<br><img src="https://tvax3.sinaimg.cn/large/006TsOC4ly1g9oigzk1ioj304f032a9u.jpg" alt="操作系统"><br>其中，进程名——作为进程的标识，假设五个进程的进程名分别为P1，P2，P3，P4，P5。<br>指针——按优先数的大小把五个进程连成队列，用指针指出下一个进程的进程控制块的首地址，最后一个进程中的指针为“0”。<br>要求运行时间——假设进程需要运行的单位时间数。<br>优先数——赋予进程的优先数，调度时总是选取优先数大的进程先执行。<br>状态——可假设有两种状态，“就绪8080”状态和“结束”状态。五个进程的初始状态都为“就绪”，用“R”表示，当一个进程运行结束后，它的状态为“结束”，用“E”表示。<br>(2) 在每次运行你所设计的处理器调度程序之前，为每个进程任意确定它的“优先数”和“要求运行时间”。本实验由于为了检查的方便，优先数和运行时间采用下表中的数值。<br>(3) 为了调度方便，把五个进程按给定的优先数从大到小连成队列。用一单元指出队首进程，用指针指出队列的连接情况。例：<br><img src="https://tvax2.sinaimg.cn/large/006TsOC4ly1g9oihd66clj30fw05bq2w.jpg" alt="操作系统"></p><hr><h3 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h3><p>确实是太菜，只能想到最笨的方法，但是在我看来代码很好理解，一步步都能看懂。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> PROC_STATE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">proc</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">32</span>];<span class="comment">//进程名</span></span><br><span class="line">    <span class="keyword">int</span> req_time;<span class="comment">//需要的运行时间，随机数产生</span></span><br><span class="line">    <span class="keyword">int</span> pri;<span class="comment">//优先级，随机数产生</span></span><br><span class="line">    PROC_STATE state;<span class="comment">//进程状态</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> _<span class="title">proc</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125; PROC;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建结构体，并为结构体中的属性赋值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PCB</span><span class="params">(PROC *P)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    PROC *p1,*p2,*p3;</span><br><span class="line">    p2 = P;</span><br><span class="line">    <span class="comment">//设置一个标志位，防止重复添加优先级相同的进程</span></span><br><span class="line">    <span class="keyword">int</span> flag[<span class="number">5</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        p1 = <span class="keyword">new</span> PROC;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//进程的名字</span></span><br><span class="line">        <span class="built_in">stringstream</span> ss;</span><br><span class="line">        ss &lt;&lt; i;</span><br><span class="line">        <span class="built_in">string</span> temp = ss.str();</span><br><span class="line">        <span class="built_in">string</span> str = <span class="string">"P"</span> + temp;</span><br><span class="line">        <span class="comment">//cout &lt;&lt; str &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//给进程命名，并得到进程名字的长度</span></span><br><span class="line">        <span class="keyword">int</span> len = str.copy(p1-&gt;name,<span class="number">31</span>);</span><br><span class="line">        <span class="comment">//在末尾加上结束符</span></span><br><span class="line">        p1-&gt;name[len] = <span class="string">'\0'</span>;</span><br><span class="line"></span><br><span class="line">        p1-&gt;req_time = rand() % <span class="number">8</span> + <span class="number">1</span>;</span><br><span class="line">        p1-&gt;pri = rand() % <span class="number">5</span> + <span class="number">1</span>;</span><br><span class="line">        p1-&gt;state = <span class="string">'R'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//尾插</span></span><br><span class="line">        <span class="keyword">switch</span>(p1-&gt;pri)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">if</span>(flag[<span class="number">4</span>] == <span class="number">0</span>)<span class="comment">//判断是否出现相同优先级</span></span><br><span class="line">            &#123;</span><br><span class="line">                p1-&gt;next = P-&gt;next;</span><br><span class="line">                P-&gt;next = p1;</span><br><span class="line">                P = p1;</span><br><span class="line">                flag[<span class="number">4</span>] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span><span class="comment">//出现相同的优先级，并且已经插入过了，i减1重新生成</span></span><br><span class="line">            &#123;</span><br><span class="line">                i--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">if</span>(flag[<span class="number">3</span>] == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                p1-&gt;next = p2-&gt;next;</span><br><span class="line">                p2-&gt;next = p1;</span><br><span class="line">                p2 = p1;</span><br><span class="line">                flag[<span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                i--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">if</span>(flag[<span class="number">2</span>] == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                p1-&gt;next = p2-&gt;next;</span><br><span class="line">                p2-&gt;next = p1;</span><br><span class="line">                p2 = p1;</span><br><span class="line">                flag[<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                i--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">if</span>(flag[<span class="number">1</span>] == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                p1-&gt;next = p2-&gt;next;</span><br><span class="line">                p2-&gt;next = p1;</span><br><span class="line">                p2 = p1;</span><br><span class="line">                flag[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                i--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span>(flag[<span class="number">0</span>] == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                p1-&gt;next = p2-&gt;next;</span><br><span class="line">                p2-&gt;next = p1;</span><br><span class="line">                p2 = p1;</span><br><span class="line">                flag[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                i--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将链按照P1，P2，P3，P4，P5的顺序排序连接</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        p2 = P;</span><br><span class="line">        p3 = P;</span><br><span class="line">        <span class="keyword">while</span>(p2-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//p3是p2的前驱</span></span><br><span class="line">            p2=p2-&gt;next;</span><br><span class="line">            <span class="keyword">if</span>(p2-&gt;pri == (<span class="number">4</span> - i))</span><br><span class="line">            &#123;</span><br><span class="line">                p3-&gt;next = p2-&gt;next;</span><br><span class="line">                p2-&gt;next = P-&gt;next;</span><br><span class="line">                P-&gt;next = p2;</span><br><span class="line">                P = p2;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            p3 = p3-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myPrint</span><span class="params">(PROC *P)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//初始化头结点</span></span><br><span class="line">    P = <span class="keyword">new</span> PROC;</span><br><span class="line">    P-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    PCB(P);</span><br><span class="line">    PROC *p1;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">7</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"第"</span> &lt;&lt; i &lt;&lt; <span class="string">"次运行："</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="comment">//每次都要重头遍历输出</span></span><br><span class="line">        p1 = P;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(p1-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            p1 = p1-&gt;next;</span><br><span class="line">            <span class="built_in">string</span> s = p1-&gt;name;</span><br><span class="line">            <span class="built_in">stringstream</span> ss;</span><br><span class="line">            ss &lt;&lt; a;</span><br><span class="line">            <span class="built_in">string</span> temp = ss.str();</span><br><span class="line">            <span class="built_in">string</span> name = <span class="string">"P"</span> + temp;</span><br><span class="line">            <span class="keyword">if</span>(s == name)<span class="comment">//按P1，P2，P3，P4，P5的顺序输出</span></span><br><span class="line">            &#123;</span><br><span class="line">                a++;</span><br><span class="line">                <span class="keyword">if</span>(p1-&gt;pri &gt; (<span class="number">6</span> - i))</span><br><span class="line">                &#123;</span><br><span class="line">                    p1-&gt;state = <span class="string">'E'</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"进程名："</span> &lt;&lt; p1-&gt;name &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"指针："</span>;</span><br><span class="line">                <span class="keyword">if</span>(p1-&gt;next == <span class="literal">NULL</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">"0"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; p1-&gt;next-&gt;name &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"要求运行时间："</span> &lt;&lt; p1-&gt;req_time &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"优先数："</span> &lt;&lt; p1-&gt;pri &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="string">"状态："</span> &lt;&lt; p1-&gt;state &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">if</span>(a == <span class="number">6</span>)<span class="comment">//直到输出P5跳出while循环</span></span><br><span class="line">                &#123;</span><br><span class="line">                    a = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    p1 = P;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"************************"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    PROC *P;</span><br><span class="line">    myPrint(P);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="https://tva4.sinaimg.cn/large/006TsOC4ly1g9oiqxrop2j30fe0dmta0.jpg" alt="操作系统3"><br><img src="https://tvax2.sinaimg.cn/large/006TsOC4ly1g9oir6b82gj30fe0dmmyg.jpg" alt="操作系统4"><br><img src="https://tvax3.sinaimg.cn/large/006TsOC4ly1g9oirecb6ej30fe0dm0tz.jpg" alt="操作系统5"><br><img src="https://tva3.sinaimg.cn/large/006TsOC4ly1g9oirkqvxdj30fe0dm0tz.jpg" alt="操作系统6"><br><img src="https://tvax3.sinaimg.cn/large/006TsOC4ly1g9oirqz55rj30fe0dmwfq.jpg" alt="操作系统7"><br><img src="https://tvax1.sinaimg.cn/large/006TsOC4ly1g9oirxo5nmj30fe0dmgmt.jpg" alt="操作系统8"></p><hr><h2 id="Game-Clearance"><a href="#Game-Clearance" class="headerlink" title="Game Clearance!!!"></a>Game Clearance!!!</h2>]]></content>
    
    <summary type="html">
    
      确实是太菜，所以用的也是很笨的实现方法，不过感觉一步步都能看懂。
    
    </summary>
    
    
      <category term="计算机专业课" scheme="https://wangxingalong.club/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    
      <category term="操作系统" scheme="https://wangxingalong.club/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="进程调度" scheme="https://wangxingalong.club/tags/%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>Markdown使用技巧之插入音频</title>
    <link href="https://wangxingalong.club/2019/12/01/Markdown%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%E4%B9%8B%E6%8F%92%E5%85%A5%E9%9F%B3%E9%A2%91/"/>
    <id>https://wangxingalong.club/2019/12/01/Markdown%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%E4%B9%8B%E6%8F%92%E5%85%A5%E9%9F%B3%E9%A2%91/</id>
    <published>2019-12-01T07:15:03.000Z</published>
    <updated>2019-12-08T08:02:14.968Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><p>测试用，可以随便听听。<br><audio src="http://link.hhtjim.com/163/464863017.mp3" style="width: 100%; max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" loop="loop" preload="meta">你的浏览器不支持这个标签。</audio></p>        <div id="aplayer-slWgfyis" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-slWgfyis"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Butter-Fly (MIX)",              author: "和田光司",              url: "http://link.hhtjim.com/163/29600327.mp3",              pic: "https://tvax3.sinaimg.cn/large/006TsOC4ly1g9g6dw1qe1j30sg0sgjtn.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.js"></script><script src="https://cdn.jsdelivr.net/npm/meting@1.1.0/dist/Meting.min.js"></script><div class="aplayer" data-id="3099548864" data-server="netease" data-type="playlist" data-mode="random" data-autoplay="true"></div><hr><h2 id="Geam-Start！"><a href="#Geam-Start！" class="headerlink" title="Geam Start！"></a>Geam Start！</h2><hr><h3 id="简单说明"><a href="#简单说明" class="headerlink" title="简单说明"></a>简单说明</h3><hr><p>看了很多的关于插入音频的文章，发现一个最难的问题就是如何获得音频文件的地址，当然，有服务器的大佬就不说了，可以直接把音频放到自己的服务器上来获得音频链接，不过这还是挺麻烦的。<br>无意中看到了一篇关于next主题插入音频的博客，发现了一个我感觉很简单的方法。我也把这位大佬的博客链接分享给各位。想了解更多的可以点击<strong><em><a href="https://yuanlichenai.cn/2019/03/03/music/" target="_blank" rel="noopener">README</a></em></strong> 查看。我就介绍一个简单可行的插入音频文件的方法。</p><hr><h3 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h3><hr><p>可以在文章开头添加，或者去修改主题：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/meting@1.1.0/dist/Meting.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>在文章中插入以下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"aplayer"</span> <span class="attr">data-id</span>=<span class="string">"3099548864"</span> <span class="attr">data-server</span>=<span class="string">"netease"</span> <span class="attr">data-type</span>=<span class="string">"playlist"</span> <span class="attr">data-mode</span>=<span class="string">"random"</span> <span class="attr">data-autoplay</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p>结果就是这样：</p><div class="aplayer" data-id="3099548864" data-server="netease" data-type="playlist" data-mode="random" data-autoplay="false"></div><hr><table><thead><tr><th align="center">主要参数</th><th align="center">值</th></tr></thead><tbody><tr><td align="center">data-id</td><td align="center">歌曲/专辑/歌单的ID</td></tr><tr><td align="center">data-server</td><td align="center">netease（网易云音乐）tencent（QQ音乐） xiami（虾米） kugou（酷狗）</td></tr><tr><td align="center">data-type</td><td align="center">song （单曲） album （专辑） playlist （歌单） search （搜索）</td></tr><tr><td align="center">data-mode</td><td align="center">random （随机） single （单曲） circulation （列表循环） order （列表）</td></tr><tr><td align="center">data-autoplay</td><td align="center">false(手动播放)/true(自动播放)</td></tr></tbody></table><hr><p>关于<code>data-autoplay</code>这个参数，我在使用的时候有一些问题，就是在将值设为<code>true</code>之后，还是有的时候不能自动播放。不过这并不影响使用。</p><hr><h3 id="获取data-id的值"><a href="#获取data-id的值" class="headerlink" title="获取data-id的值"></a>获取<code>data-id</code>的值</h3><hr><p>下面就来说一下如何获得<code>data-id</code>的值。</p><hr><p>以网易云为例。首先进入网易云官网，如果是想插入自己的歌单，就登录自己的账号。<br><img src="https://tva2.sinaimg.cn/large/006TsOC4ly1g9h9pz5e79j30w80hcajc.jpg" alt="audio_skill1"></p><hr><p>然后搜索自己想要添加的音乐。<br><img src="https://tvax3.sinaimg.cn/large/006TsOC4ly1g9h9qf3j12j30wb0f7abo.jpg" alt="audio_skill2"></p><hr><p>点击要添加的音乐或歌单，就能看到需要的ID了。<br><img src="https://tvax3.sinaimg.cn/large/006TsOC4ly1g9h9qqrp7cj30vv0fzjwe.jpg" alt="audio_skill3"></p><hr><p><img src="https://tvax4.sinaimg.cn/large/006TsOC4ly1g9h9r1bqcrj30qu0a578i.jpg" alt="audio_skill4"></p><hr><h2 id="Game-Clearance"><a href="#Game-Clearance" class="headerlink" title="Game Clearance!!!"></a>Game Clearance!!!</h2>]]></content>
    
    <summary type="html">
    
      介绍一种最简单的Markdown插入音频的方法。
    
    </summary>
    
    
      <category term="开发工具" scheme="https://wangxingalong.club/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Markdown" scheme="https://wangxingalong.club/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Markdown使用技巧之插入图片</title>
    <link href="https://wangxingalong.club/2019/11/30/Markdown%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%E4%B9%8B%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/"/>
    <id>https://wangxingalong.club/2019/11/30/Markdown%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%E4%B9%8B%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</id>
    <published>2019-11-30T11:26:46.000Z</published>
    <updated>2019-12-08T08:11:07.621Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><p>测试用，可以随便听听。<br><audio src="http://link.hhtjim.com/163/464863017.mp3" style="width: 100%; max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" loop="loop" preload="meta">你的浏览器不支持这个标签。</audio></p>        <div id="aplayer-alZBKXPC" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-alZBKXPC"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Butter-Fly (MIX)",              author: "和田光司",              url: "http://link.hhtjim.com/163/29600327.mp3",              pic: "https://tvax3.sinaimg.cn/large/006TsOC4ly1g9g6dw1qe1j30sg0sgjtn.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.js"></script><script src="https://cdn.jsdelivr.net/npm/meting@1.1.0/dist/Meting.min.js"></script><div class="aplayer" data-id="3099548864" data-server="netease" data-type="playlist" data-mode="random" data-autoplay="true"></div><hr><h2 id="Game-Start"><a href="#Game-Start" class="headerlink" title="Game Start!"></a>Game Start!</h2><hr><h2 id="工具推荐"><a href="#工具推荐" class="headerlink" title="工具推荐"></a>工具推荐</h2><p><strong>微博图床</strong>：<a href="https://chrome.google.com/webstore/detail/%E5%BE%AE%E5%8D%9A%E5%9B%BE%E5%BA%8A/pinjkilghdfhnkibhcangnpmcpdpmehk?hl=zh-CN" target="_blank" rel="noopener">https://chrome.google.com/webstore/detail/%E5%BE%AE%E5%8D%9A%E5%9B%BE%E5%BA%8A/pinjkilghdfhnkibhcangnpmcpdpmehk?hl=zh-CN</a><br>网上说这个不能长期使用，要看新浪的心情。不过就目前情况来说，没有服务器的情况下，这个Chrome插件还是不错的。</p><hr><h2 id="安装并启用插件。"><a href="#安装并启用插件。" class="headerlink" title="安装并启用插件。"></a>安装并启用插件。</h2><hr><p>如果已经安装了插件，Chrome浏览器的导航栏会出现如图所示的标志：<br><img src="https://tvax4.sinaimg.cn/large/006TsOC4ly1g9h8lfvp9dj303i012dfm.jpg" alt="image_skill1"></p><hr><h2 id="上传并获得图片链接"><a href="#上传并获得图片链接" class="headerlink" title="上传并获得图片链接"></a>上传并获得图片链接</h2><hr><p>启用插件之后，点击插件，按步骤上传图片即可：<br><img src="https://tvax1.sinaimg.cn/large/006TsOC4ly1g9pdq8wpg5j30nf0gcn0p.jpg" alt="image_skill2"><br>复制Markdown之后直接粘贴到文章中即可。<br><strong>有的时候可能会上传失败，这时可以打开微博，登录上你的微博账号就能上传了。</strong></p><hr><h2 id="Game-Clearance"><a href="#Game-Clearance" class="headerlink" title="Game Clearance!!!"></a>Game Clearance!!!</h2>]]></content>
    
    <summary type="html">
    
      介绍一个能将本地图片转成HTTPS的URL或者Markdown地址的一个Chrome插件，当然，如果已经有了服务器，可以直接把图片上传到服务器中。
    
    </summary>
    
    
      <category term="开发工具" scheme="https://wangxingalong.club/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Markdown" scheme="https://wangxingalong.club/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown学习笔记</title>
    <link href="https://wangxingalong.club/2019/11/25/MarkDown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://wangxingalong.club/2019/11/25/MarkDown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2019-11-25T11:11:08.000Z</published>
    <updated>2019-12-08T08:02:24.554Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><p>测试用，可以随便听听。<br><audio src="http://link.hhtjim.com/163/464863017.mp3" style="width: 100%; max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;" controls="controls" loop="loop" preload="meta">你的浏览器不支持这个标签。</audio></p>        <div id="aplayer-iuLpJqRG" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-iuLpJqRG"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Butter-Fly (MIX)",              author: "和田光司",              url: "http://link.hhtjim.com/163/29600327.mp3",              pic: "https://tvax3.sinaimg.cn/large/006TsOC4ly1g9g6dw1qe1j30sg0sgjtn.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.7.0/dist/APlayer.min.js"></script><script src="https://cdn.jsdelivr.net/npm/meting@1.1.0/dist/Meting.min.js"></script><div class="aplayer" data-id="3099548864" data-server="netease" data-type="playlist" data-mode="random" data-autoplay="true"></div><hr><h2 id="工具推荐"><a href="#工具推荐" class="headerlink" title="工具推荐"></a>工具推荐</h2><hr><p><strong>Typora</strong>：<a href="https://typora.io/" target="_blank" rel="noopener">https://typora.io/</a><br><strong>Atom</strong>：<a href="https://atom.io/" target="_blank" rel="noopener">https://atom.io/</a><br>两个都是很不错的Markdown编辑器，Typora使用更加的方便，配合快捷键的使用能够实现快速编辑，能够实时预览，使用教程可以去网上找，推荐一个不错的教程。<br><strong>Typora使用教程</strong>：<a href="https://blog.csdn.net/WeiDelight/article/details/81011921" target="_blank" rel="noopener">https://blog.csdn.net/WeiDelight/article/details/81011921</a><br>Atom不再多说，自行了解。</p><hr><h2 id="Game-Start"><a href="#Game-Start" class="headerlink" title="Game Start!"></a>Game Start!</h2><h3 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a><span id="title">1.标题</span></h3><p>标题用#，注意<strong>符号与文本之间要有空格</strong></p><hr><p>编辑样式：</p><blockquote><p># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题</p></blockquote><p>输出结果：<br><img src="https://tvax4.sinaimg.cn/large/006TsOC4ly1g9f2gn1yqej30mb062wem.jpg" alt="title"></p><hr><h3 id="2-字体"><a href="#2-字体" class="headerlink" title="2.字体"></a><span id ="font">2.字体</span></h3><hr><p>编辑样式：</p><blockquote><p>*斜体*<br>_斜体_<br>**粗体**<br>__粗体__<br>***粗斜体***<br>___粗斜体___</p></blockquote><p>输出结果：</p><blockquote><p><em>斜体</em><br><em>斜体</em><br><strong>粗体</strong><br><strong>粗体</strong><br><strong><em>粗斜体</em></strong><br><strong><em>粗斜体</em></strong></p></blockquote><hr><h3 id="3-分割线"><a href="#3-分割线" class="headerlink" title="3.分割线"></a><span id ="cutoff">3.分割线</span></h3><hr><p>三个以上的星号（*）或减号（-）。<br>编辑样式：</p><blockquote><p>***<br>* * *<br>******<br>---<br>- - -<br>-------</p></blockquote><p>输出结果：</p><blockquote><hr><hr><hr><hr><hr><hr></blockquote><hr><h3 id="4-删除线"><a href="#4-删除线" class="headerlink" title="4.删除线"></a><span id ="underline">4.删除线</span></h3><p>内容两边加两个波浪线（~~）</p><hr><p>编辑样式：</p><blockquote><p>~~删除线~~</p></blockquote><p>输出结果：</p><blockquote><p><del>删除线</del></p></blockquote><hr><h3 id="5-下划线"><a href="#5-下划线" class="headerlink" title="5.下划线"></a><span id ="underline">5.下划线</span></h3><p>使用HTML的&lt;u&gt;标签</p><hr><p>编辑样式：</p><blockquote><p>&lt;u&gt;下划线&lt;/u&gt;</p></blockquote><p>输出结果：</p><blockquote><p><u>下划线</u></p></blockquote><hr><h3 id="6-脚注"><a href="#6-脚注" class="headerlink" title="6.脚注"></a><span id ="footnote">6.脚注</span></h3><p>脚注是对文本的补充说明，鼠标移至脚注上会显示说明。</p><hr><p>编辑样式：</p><blockquote><p>脚注[^望星Along]</p><p>[^望星Along]: 温柔的博主大大</p></blockquote><p>输出结果：</p><p>脚注<a href="温柔的博主大大">^望星Along</a></p><hr><h3 id="7-列表"><a href="#7-列表" class="headerlink" title="7.列表"></a><span id ="list">7.列表</span></h3><h4 id="7-1无序列表"><a href="#7-1无序列表" class="headerlink" title="7.1无序列表"></a><span id ="list1">7.1无序列表</span></h4><p>无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记，注意<strong>符号与文本之间要有空格</strong>。</p><hr><p>编辑样式：</p><blockquote><p>* item1<br>* item2<br>+ item1<br>+ item2<br>- item1<br>- item2</p></blockquote><p>输出结果：</p><blockquote><ul><li>item1</li><li>item2</li></ul><ul><li>item1</li><li>item2</li></ul><ul><li>item1</li><li>item2</li></ul></blockquote><hr><h4 id="7-2有序列表"><a href="#7-2有序列表" class="headerlink" title="7.2有序列表"></a><span id ="list2">7.2有序列表</span></h4><p>有序列表使用数字加点（.）来表示。</p><hr><p>编辑样式：</p><blockquote><ol><li>item1</li><li>item2</li></ol></blockquote><p>输出结果：</p><blockquote><ol><li>item1</li><li>item2</li></ol></blockquote><h4 id="7-3列表嵌套"><a href="#7-3列表嵌套" class="headerlink" title="7.3列表嵌套"></a><span id ="list3">7.3列表嵌套</span></h4><p>子列表前加四个空格。</p><hr><p>编辑样式：</p><blockquote><ol><li>item1<br>- item1.1<br>- item1.2</li><li>item2<br>- item2.1<br>- item2.2</li></ol></blockquote><p>输出结果：</p><blockquote><ol><li>item1<ul><li>item1.1</li><li>item1.2</li></ul></li><li>item2<ul><li>item2.1</li><li>item2.1</li></ul></li></ol></blockquote><hr><h3 id="8-引用"><a href="#8-引用" class="headerlink" title="8.引用"></a><span id ="quote">8.引用</span></h3><p>使用符号&gt;。</p><hr><p>编辑样式：</p><blockquote><p>&gt;引用1<br>&gt;引用2</p></blockquote><p>输出样式：</p><blockquote><p>引用1<br>引用2  </p></blockquote><p>嵌套用多个&gt;</p><hr><p>编辑样式：</p><blockquote><p>&gt; 引用1<br>&gt;&gt; 引用1.1<br>&gt;&gt;&gt; 引用1.1.1</p></blockquote><p>输出样式：</p><blockquote><p>引用1</p><blockquote><p>引用1.1</p><blockquote><p>引用1.1.1</p></blockquote></blockquote></blockquote><p><strong>区块引用也可以和列表嵌套使用。</strong></p><hr><h3 id="9-代码"><a href="#9-代码" class="headerlink" title="9.代码"></a><span id ="code">9.代码</span></h3><p>段落中使用代码可以用`包括起来。</p><hr><p>编辑样式：</p><blockquote><p>输出函数：`print()`</p></blockquote><p>输出结果：</p><blockquote><p>输出函数：<code>print()</code></p></blockquote><p>代码区块使用3个`符号,可以指定语言,指定语言之后能够使代码高亮。<br>编辑样式：<br>``` java<br>int add(int a,int b){<br>  return a + b;<br>}<br>```<br>输出结果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="10-链接"><a href="#10-链接" class="headerlink" title="10.链接"></a><span id ="link">10.链接</span></h3><hr><p>编辑样式：</p><blockquote><p>[链接](链接地址)<br>或者<br>&lt;链接地址&gt;</p></blockquote><p>输出结果：<br><a href="https://www.baidu.com/" target="_blank" rel="noopener">百度</a><br><a href="https://www.baidu.com/" target="_blank" rel="noopener">https://www.baidu.com/</a></p><hr><h3 id="11-高级链接"><a href="#11-高级链接" class="headerlink" title="11.高级链接"></a><span id ="highlink">11.高级链接</span></h3><p>链接也可以用变量来代替，文档末尾附带变量地址，注意，<strong>两行之间至少空一行</strong>。<br>编辑样式：</p><blockquote><p>百度链接：1 [百度]<a href="https://www.baidu.com/" target="_blank" rel="noopener">1</a></p><p>[1]: 链接地址</p></blockquote><p>输出结果：<br>百度链接：1 <a href="https://www.baidu.com/" target="_blank" rel="noopener">百度</a></p><hr><h3 id="12-图片"><a href="#12-图片" class="headerlink" title="12.图片"></a><span id ="image">12.图片</span></h3><hr><p>编辑样式：</p><blockquote><p>![图片属性文本](图片地址 “可选标题（可以不要）”)</p></blockquote><p>输出结果：<br><img src="https://tva4.sinaimg.cn/large/006TsOC4ly1g9f281hbw5j30co0jz43e.jpg" alt="saber1" title="title_saber"><br>设置可选标题之后，鼠标触碰图片显示该段文本。<br>插入图片也可以使用变量，参考高级链接。<br>想要设置图片的宽和高就使用&lt;img&gt;标签。<br>编辑样式：</p><blockquote><p>&lt;img src=”图片地址” width=”100px” height=”225px”&gt;</p></blockquote><p>输出结果：<br><img src="https://tvax1.sinaimg.cn/large/006TsOC4ly1g9f281hbw5j30co0jz43e.jpg" width="100px" height="225px"></p><hr><h3 id="13-表格"><a href="#13-表格" class="headerlink" title="13.表格"></a><span id ="table">13.表格</span></h3><p><strong>在本博客上看不明显，可以在Typora上实时预览。</strong><br>使用<code>|</code>来分割不同的单元格，使用<code>-</code>来分割表头和其他行。<br>编辑样式：</p><blockquote><p><code>|</code> 表头 <code>|</code> 表头 <code>|</code> 表头 <code>|</code><br><code>|</code> <code>---</code> <code>|</code> <code>---</code> <code>|</code> <code>---:</code> <code>|</code><br><code>|</code> 单元格 <code>|</code> 单元格 <code>|</code> 单元格 <code>|</code><br><code>|</code> 单元格 <code>|</code> 单元格 <code>|</code> 单元格 <code>|</code></p></blockquote><p>输出结果：</p><table><thead><tr><th>表头</th><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td><td>单元格</td></tr></tbody></table><p>表格中的对齐方式：<br><code>-:</code>右对齐。<br><code>:-:</code>居中对齐。<br><code>:-</code>左对齐<br><strong>这个要看编辑器如何解释的了。</strong><br>编辑样式：</p><blockquote><p><code>|</code> 左对齐 <code>|</code> 居中 <code>|</code> 右对齐 <code>|</code><br><code>|</code> <code>:---</code> <code>|</code> <code>:---:</code> <code>|</code> <code>---:</code> <code>|</code><br><code>|</code> 单元格 <code>|</code> 单元格 <code>|</code> 单元格 <code>|</code><br><code>|</code> 单元格 <code>|</code> 单元格 <code>|</code> 单元格 <code>|</code></p></blockquote><p>输出结果：</p><table><thead><tr><th align="left">左对齐</th><th align="center">居中</th><th align="right">右对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="center">单元格</td><td align="right">单元格</td></tr><tr><td align="left">单元格</td><td align="center">单元格</td><td align="right">单元格</td></tr><tr><td align="left">***</td><td align="center"></td><td align="right"></td></tr></tbody></table><h3 id="14-高级技巧"><a href="#14-高级技巧" class="headerlink" title="14.高级技巧"></a><span id ="skill">14.高级技巧</span></h3><hr><h4 id="14-1支持的HTML元素"><a href="#14-1支持的HTML元素" class="headerlink" title="14.1支持的HTML元素"></a><span id ="html">14.1支持的HTML元素</span></h4><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。<br>目前支持的 HTML 元素有：<code>&lt;kbd&gt;</code> <code>&lt;b&gt;</code> <code>&lt;i&gt;</code> <code>&lt;em&gt;</code> <code>&lt;sup&gt;</code> <code>&lt;sub&gt;</code> <code>&lt;br&gt;</code>等。</p><hr><p>编辑样式：</p><blockquote><p>使用 <code>&lt;kbd&gt;</code>Ctrl<code>&lt;/kbd&gt;</code>+<code>&lt;kbd&gt;</code>Alt<code>&lt;/kbd&gt;</code>+<code>&lt;kbd&gt;</code>Del<code>&lt;/kbd&gt;</code> 重启电脑</p></blockquote><p>输出结果：<br>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p><hr><h4 id="14-2转义"><a href="#14-2转义" class="headerlink" title="14.2转义"></a><span id ="transferred">14.2转义</span></h4><p>Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠（<code>\</code>）转义特殊字符。</p><blockquote><p>\* \* 正常显示星号 \* \*<br>**粗体**</p></blockquote><p>结果显示：</p><blockquote><p>\ *\ *正常显示星号\ *\ *<br><strong>粗体</strong></p></blockquote><hr><h3 id="15-注释"><a href="#15-注释" class="headerlink" title="15.注释"></a>15.注释</h3><hr><h4 id="15-1HTML标签"><a href="#15-1HTML标签" class="headerlink" title="15.1HTML标签"></a>15.1HTML标签</h4><p>可以使用HTML标签中的注释<code>&lt;!-- --&gt;</code>，使用这种方法在Markdown被渲染之后可以在源代码中查看到。</p><hr><p>编辑样式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这是注释！ --&gt;</span></span><br></pre></td></tr></table></figure><hr><!-- 这是注释 --><p>输出结果可以通过源代码查看。</p><h4 id="15-2链接标签样式"><a href="#15-2链接标签样式" class="headerlink" title="15.2链接标签样式"></a>15.2链接标签样式</h4><p>如果希望在Markdown渲染之后（查看源代码）看不到这段注释就使用链接标签样式。</p><hr><p>编辑样式：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">注释</span>]: <span class="link">&lt;&gt; (这是一段注释)</span></span><br><span class="line">[<span class="symbol">//</span>]: <span class="link">&lt;&gt; (这是一段注释)</span></span><br></pre></td></tr></table></figure><p>输出结果无法通过源代码查看。<br>为了提高平台的兼容性，你还可以使用<code>#</code>代替<code>&lt;&gt;</code>。<br>编辑样式：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">//</span>]: <span class="link"># (这是一段注释)</span></span><br></pre></td></tr></table></figure><h2 id="Game-Clearance"><a href="#Game-Clearance" class="headerlink" title="Game Clearance!!!"></a>Game Clearance!!!</h2>]]></content>
    
    <summary type="html">
    
      记录Markdown的一些常用语法，满足基本的Markdown使用。
    
    </summary>
    
    
      <category term="开发工具" scheme="https://wangxingalong.club/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Markdown" scheme="https://wangxingalong.club/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>我的第一个博客</title>
    <link href="https://wangxingalong.club/2019/11/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://wangxingalong.club/2019/11/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/</id>
    <published>2019-11-22T06:21:49.000Z</published>
    <updated>2019-12-08T07:59:38.555Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="我的第一个博客"><a href="#我的第一个博客" class="headerlink" title="我的第一个博客"></a>我的第一个博客</h2><h4 id="测试code"><a href="#测试code" class="headerlink" title="测试code"></a>测试code</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"Hello World!"</span>)</span><br></pre></td></tr></table></figure><h4 id="测试公式"><a href="#测试公式" class="headerlink" title="测试公式"></a>测试公式</h4><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$<span class="tag">\<span class="name">Gamma</span></span>(n) = (n-1)!<span class="tag">\<span class="name">quad</span></span><span class="tag">\<span class="name">forall</span></span> n<span class="tag">\<span class="name">in</span></span><span class="tag">\<span class="name">mathbb</span></span> N$</span></span><br></pre></td></tr></table></figure><p>$\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$$</span></span><br><span class="line"><span class="formula"><span class="tag">\<span class="name">Gamma</span></span>(z) = <span class="tag">\<span class="name">int</span></span>_0^<span class="tag">\<span class="name">infty</span></span> t^&#123;z-1&#125;e^&#123;-t&#125;dt<span class="tag">\<span class="name">,</span></span>.</span></span><br><span class="line"><span class="formula">$$</span></span><br></pre></td></tr></table></figure><p>$$<br>\Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt,.<br>$$</p>]]></content>
    
    <summary type="html">
    
      这是一个描述
    
    </summary>
    
    
    
  </entry>
  
</feed>
